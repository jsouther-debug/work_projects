Jared Souther
Dr. Stanley
COS-432
10/7/19


	I decided to exploit shellshock after many hours of failures and false starts. I originally couldn't get this to work either, but then I heard that other people had gotten it to work so I thought it was worth another attempt. Shellshock is a vulnerability that executes trailing strings in function definitions, sortof. How this happens is a "magic string" '{:;};' anything after that semicolon until the end of the function declaration that is marked with a ' gets executed on a command line. This shouldn't actually be possible but it is the vulnerability in itself, the end of the function declaration is marked with } and then the semicolon allows you to glue on whatever commands you want. What is actually happening behind the scenes for this exploit is apache is getting a request and breaking it apart and storing it into environment vairables. Once it has broken apart its request into environment variables it loads the environment, when it does this, it executes the variable with the function call that does nothing and delivers our payload directly to a shell. So by crafting our payload in such a way we can give it any kind of command the apache would have privilegeto run.  This can be accomplished in several ways but the most common way is through CGI pages because they don't require authentication and they often use bash as their request handler. The Common Gateway Interface is a way for web servers to execute programs via command line.

I had to find the cgi-bin directory which proved to be a challenge because it gets mapped by apache as just cgi-bin when in reality the directory is /usr/lib/cgi-bin. I found this by sshing into jim with root creds, and ran the commands cd /| grep -r 'cgi-bin' /etc/. That took some trial and error because I was unfamiliar with the grep command, I knew it but hardly ever used it. So knowing where the cgi-bin directory was I located it and found there was only one file called hello.sh, and with that and a few modifications, the exploit I had found online actually worked. I then modified the payload of my attack so instead of getting everyone's passwords and returning them to a file on my virtual machine I created a file 'jared_got_it.txt' in the cgi-bin directory to show my success. 



inpiration credit: https://metalkey.github.io/shellshock-explained--exploitation-tutorial.html
